version: '3.5'

services:
  ugc:
    container_name: ugc
    image: ugc
    networks:
      - movies
    environment:
      KAFKA__HOST: broker
      KAFKA__PORT: 29092
      APP__JWT_SECRET_KEY: $APP__JWT_SECRET_KEY
      APP__ALGORITHM: HS256
    depends_on:
      - broker
    env_file:
      - .env

  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
    networks:
      - movies
    depends_on:
      - ugc

  logstash:
    image: docker.elastic.co/logstash/logstash:8.6.1
    environment:
      XPACK_MONITORING_ENABLED: "false"
      ES_HOST: "elasticsearch:9200"
    ports:
      - "5044:5044/udp"
    volumes:
      - ./configs/logstash.conf:/config/logstash.conf:ro
    command: logstash -f /config/logstash.conf
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
    ports:
      - 9200:9200
    volumes:
      - /tmp/esdata:/tmp/elasticsearch/data

  
  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.1
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.6.1
    volumes:
      - /tmp/logs/nginx:/var/log/nginx:ro
      - ./configs/filebeat.yml:/usr/share/filebeat/filebeat.yml
    depends_on:
      - ugc
      - nginx
      - logstash
      - elasticsearch
      - kibana
    links:
      - logstash

networks:
  movies:
    name: movies

volumes:
  postgres:
  pgadmin:
